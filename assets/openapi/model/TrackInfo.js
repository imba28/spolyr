/**
 * Spolyr
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TrackInfo model module.
 * @module model/TrackInfo
 * @version 1.0.0
 */
class TrackInfo {
    /**
     * Constructs a new <code>TrackInfo</code>.
     * @alias module:model/TrackInfo
     * @param spotifyId {String} 
     * @param title {String} 
     * @param hasLyrics {Boolean} 
     */
    constructor(spotifyId, title, hasLyrics) { 
        
        TrackInfo.initialize(this, spotifyId, title, hasLyrics);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, spotifyId, title, hasLyrics) { 
        obj['spotifyId'] = spotifyId;
        obj['title'] = title;
        obj['hasLyrics'] = hasLyrics;
    }

    /**
     * Constructs a <code>TrackInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TrackInfo} obj Optional instance to populate.
     * @return {module:model/TrackInfo} The populated <code>TrackInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrackInfo();

            if (data.hasOwnProperty('spotifyId')) {
                obj['spotifyId'] = ApiClient.convertToType(data['spotifyId'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('album')) {
                obj['album'] = ApiClient.convertToType(data['album'], 'String');
            }
            if (data.hasOwnProperty('coverImage')) {
                obj['coverImage'] = ApiClient.convertToType(data['coverImage'], 'String');
            }
            if (data.hasOwnProperty('previewURL')) {
                obj['previewURL'] = ApiClient.convertToType(data['previewURL'], 'String');
            }
            if (data.hasOwnProperty('artists')) {
                obj['artists'] = ApiClient.convertToType(data['artists'], ['String']);
            }
            if (data.hasOwnProperty('hasLyrics')) {
                obj['hasLyrics'] = ApiClient.convertToType(data['hasLyrics'], 'Boolean');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} spotifyId
 */
TrackInfo.prototype['spotifyId'] = undefined;

/**
 * @member {String} title
 */
TrackInfo.prototype['title'] = undefined;

/**
 * @member {String} album
 */
TrackInfo.prototype['album'] = undefined;

/**
 * @member {String} coverImage
 */
TrackInfo.prototype['coverImage'] = undefined;

/**
 * @member {String} previewURL
 */
TrackInfo.prototype['previewURL'] = undefined;

/**
 * @member {Array.<String>} artists
 */
TrackInfo.prototype['artists'] = undefined;

/**
 * @member {Boolean} hasLyrics
 */
TrackInfo.prototype['hasLyrics'] = undefined;

/**
 * @member {String} language
 */
TrackInfo.prototype['language'] = undefined;






export default TrackInfo;

