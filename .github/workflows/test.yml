name: Test and build

on:
  push:
    branches: [ 'master', 'feat/*' ]
  pull_request:
    branches: [ 'master' ]

jobs:
  openapi-code-generator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - run: make openapi-spec

      - uses: actions/upload-artifact@v3
        with:
          name: openapi-files
          path: |
            assets/openapi
            internal/openapi
          if-no-files-found: error

  frontend:
    needs: openapi-code-generator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - uses: actions/download-artifact@v3
        with:
          name: openapi-files
          path: .

      - run: make lint-frontend
      - run: make frontend

      - run: make test-frontend

  backend:
    needs: openapi-code-generator
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mongodb_image: ['mongo:4', 'mongo:5']

    env:
      DATABASE_USER: root
      DATABASE_PASSWORD: example
      DATABASE_HOST: 127.0.0.1

    services:
      mongodb:
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ env.DATABASE_USER }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ env.DATABASE_PASSWORD }}
        image: ${{ matrix.mongodb_image }}
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: actions/download-artifact@v3
        with:
          name: openapi-files
          path: .

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Test
        run: make test

      - name: Test
        run: make build-linux

      - name: Print coverage
        run: go tool cover -func cover.out | tail -n 1 | awk '{print $3}'
