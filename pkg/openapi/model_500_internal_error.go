/*
 * Spolyr
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Model500InternalError struct {
	Code int32 `json:"code"`

	Message string `json:"message"`
}

// AssertModel500InternalErrorRequired checks if the required fields are not zero-ed
func AssertModel500InternalErrorRequired(obj Model500InternalError) error {
	elements := map[string]interface{}{
		"code":    obj.Code,
		"message": obj.Message,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseModel500InternalErrorRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Model500InternalError (e.g. [][]Model500InternalError), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseModel500InternalErrorRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aModel500InternalError, ok := obj.(Model500InternalError)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertModel500InternalErrorRequired(aModel500InternalError)
	})
}
