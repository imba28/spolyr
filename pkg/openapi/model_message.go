/*
 * Spolyr
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Message struct {
	Code int32 `json:"code"`

	Message string `json:"message"`
}

// AssertMessageRequired checks if the required fields are not zero-ed
func AssertMessageRequired(obj Message) error {
	elements := map[string]interface{}{
		"code":    obj.Code,
		"message": obj.Message,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseMessageRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Message (e.g. [][]Message), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseMessageRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aMessage, ok := obj.(Message)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertMessageRequired(aMessage)
	})
}
