/*
 * Spolyr
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)

// AuthApiRouter defines the required methods for binding the api requests to a responses for the AuthApi
// The AuthApiRouter implementation should parse necessary information from the http request,
// pass the data to a AuthApiServicer to perform the required actions, then write the service results to the http response.
type AuthApiRouter interface {
	AuthConfigurationGet(http.ResponseWriter, *http.Request)
	AuthLoginPost(http.ResponseWriter, *http.Request)
	AuthLogoutGet(http.ResponseWriter, *http.Request)
	AuthRefreshGet(http.ResponseWriter, *http.Request)
}

// ImportApiRouter defines the required methods for binding the api requests to a responses for the ImportApi
// The ImportApiRouter implementation should parse necessary information from the http request,
// pass the data to a ImportApiServicer to perform the required actions, then write the service results to the http response.
type ImportApiRouter interface {
	ImportLibraryPost(http.ResponseWriter, *http.Request)
	ImportLyricsGet(http.ResponseWriter, *http.Request)
	ImportLyricsPost(http.ResponseWriter, *http.Request)
	ImportLyricsTrackIdPost(http.ResponseWriter, *http.Request)
	ImportPlaylistIdPost(http.ResponseWriter, *http.Request)
}

// PlaylistsApiRouter defines the required methods for binding the api requests to a responses for the PlaylistsApi
// The PlaylistsApiRouter implementation should parse necessary information from the http request,
// pass the data to a PlaylistsApiServicer to perform the required actions, then write the service results to the http response.
type PlaylistsApiRouter interface {
	PlaylistsGet(http.ResponseWriter, *http.Request)
}

// TracksApiRouter defines the required methods for binding the api requests to a responses for the TracksApi
// The TracksApiRouter implementation should parse necessary information from the http request,
// pass the data to a TracksApiServicer to perform the required actions, then write the service results to the http response.
type TracksApiRouter interface {
	TracksGet(http.ResponseWriter, *http.Request)
	TracksIdGet(http.ResponseWriter, *http.Request)
	TracksIdPatch(http.ResponseWriter, *http.Request)
	TracksStatsGet(http.ResponseWriter, *http.Request)
}

// AuthApiServicer defines the api actions for the AuthApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AuthApiServicer interface {
	AuthConfigurationGet(context.Context) (ImplResponse, error)
	AuthLoginPost(context.Context, AuthLoginPostRequest) (ImplResponse, error)
	AuthLogoutGet(context.Context) (ImplResponse, error)
	AuthRefreshGet(context.Context) (ImplResponse, error)
}

// ImportApiServicer defines the api actions for the ImportApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ImportApiServicer interface {
	ImportLibraryPost(context.Context) (ImplResponse, error)
	ImportLyricsGet(context.Context) (ImplResponse, error)
	ImportLyricsPost(context.Context) (ImplResponse, error)
	ImportLyricsTrackIdPost(context.Context, string) (ImplResponse, error)
	ImportPlaylistIdPost(context.Context, string) (ImplResponse, error)
}

// PlaylistsApiServicer defines the api actions for the PlaylistsApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PlaylistsApiServicer interface {
	PlaylistsGet(context.Context, int32, int32) (ImplResponse, error)
}

// TracksApiServicer defines the api actions for the TracksApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TracksApiServicer interface {
	TracksGet(context.Context, int32, int32, string) (ImplResponse, error)
	TracksIdGet(context.Context, string) (ImplResponse, error)
	TracksIdPatch(context.Context, string, Lyrics) (ImplResponse, error)
	TracksStatsGet(context.Context) (ImplResponse, error)
}
