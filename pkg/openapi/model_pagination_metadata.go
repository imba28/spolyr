/*
 * Spolyr
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type PaginationMetadata struct {
	Page int32 `json:"page,omitempty"`

	Limit int32 `json:"limit,omitempty"`

	Total int32 `json:"total,omitempty"`
}

// AssertPaginationMetadataRequired checks if the required fields are not zero-ed
func AssertPaginationMetadataRequired(obj PaginationMetadata) error {
	return nil
}

// AssertRecursePaginationMetadataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PaginationMetadata (e.g. [][]PaginationMetadata), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePaginationMetadataRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPaginationMetadata, ok := obj.(PaginationMetadata)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPaginationMetadataRequired(aPaginationMetadata)
	})
}
